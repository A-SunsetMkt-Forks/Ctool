import{u as V,i as k}from"./action-6a4db2bf.js";import{c as w,a as A,T as i}from"./index-85db1b1a.js";import{b as E}from"./cryptoJS-75d3e7d9.js";import{A as I,bi as v,k as B,m as C,bj as a,aF as o,as as H,x as p,a$ as n}from"./history-93a6285c.js";import"./_commonjsHelpers-87174ba5.js";import"./index-b1ff2442.js";import"./shim-03580cdb.js";import"./index-bdc3fa98.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./string_decoder-7fdcd1c7.js";import"./callBound-7203e6b7.js";import"./index-71a93be5.js";const K=I({__name:"Encrypt",async setup(z){let u,s;const l={key:""},t=V(([u,s]=v(()=>k({input:w("text"),option:l,output:A("base64")})),u=await u,s(),u)),m=B(()=>{if(t.current.input.text.isEmpty()||t.current.option.key==="")return i.empty();if(t.current.input.text.isError())return t.current.input.text;try{if(!t.current.input.text.isText())throw new Error("input content must text / text file");return i.fromBase64(E.encrypt(t.current.input.text.toBase64(),t.current.option))}catch(c){return i.fromError($error(c))}}),d=()=>{t.save()};return(c,e)=>{const x=o("TextInput"),_=o("HelpTip"),f=o("Input"),g=o("TextOutput"),y=o("Align"),h=o("HeightResize");return H(),C(h,{ignore:"",append:[".ctool-page-option"],reduce:10},{default:a(({small:T,large:b})=>[p(y,{direction:"vertical"},{default:a(()=>[p(x,{modelValue:n(t).current.input,"onUpdate:modelValue":e[0]||(e[0]=r=>n(t).current.input=r),height:T,upload:"file",encoding:""},null,8,["modelValue","height"]),p(f,{class:"ctool-page-option",modelValue:n(t).current.option.key,"onUpdate:modelValue":e[1]||(e[1]=r=>n(t).current.option.key=r),label:"key"},{suffix:a(()=>[p(_,{link:"https://github.com/brix/crypto-js"})]),_:1},8,["modelValue"]),p(g,{modelValue:n(t).current.output,"onUpdate:modelValue":e[2]||(e[2]=r=>n(t).current.output=r),allow:["base64","hex"],content:m.value,height:b,onSuccess:d},null,8,["modelValue","content","height"])]),_:2},1024)]),_:1},8,["append"])}}});export{K as default};
