name: Build Ctool
on: [ push ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build Core
        run: |
          pnpm run build
          ls -lh ./packages/ctool-core/dist

      - name: Release Adapter Platform
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          node release.js
          pnpm -r --filter='!ctool-adapter-tauri' platform-release
          ls -lh ./_release/

      - name: Upload Release To Github
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          files: |
            ./_release/ctool_web.zip
            ./_release/ctool_chrome.zip
            ./_release/ctool_edge.zip
            ./_release/ctool_utools.zip
            ./_release/ctool_firefox.zip

      - name: Deploy web to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./packages/ctool-core/dist

  build-tauri:
    needs: deploy
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}

    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Rust cache
      - uses: Swatinem/rust-cache@v1

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      # Install wasm-pack
      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
          version: v0.9.1

      - name: Install rsw
        run: cargo install rsw

      - name: Install dependencies
        run: pnpm install

      - name: Build Core
        run: |
          pnpm run build
          ls -lh ./packages/ctool-core/dist

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        with:
          projectPath: packages/ctool-adapter/tauri
          releaseId: ${{ needs.deploy.outputs.RELEASE_UPLOAD_ID }}
          tauriScript: pnpm -r --filter='ctool-adapter-tauri' run platform-release
